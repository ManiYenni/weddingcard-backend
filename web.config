<?xml version="1.0"?>
<configuration>
  <system.webServer>
    
    <!-- indicates that the index.js file is a node.js application 
 to be handled by the iisnode module -->
    
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>
    
    <!-- adds index.js to the default document list to allow 
 URLs that only specify the application root location, 
 e.g. http://mysite.abc.com/ -->
    
    <rewrite>
      <rules>        
        <!-- Don't interfere with requests for node-inspector debugging -->
        <clear />
        <rule name="Redirect to https" stopProcessing="true">
            <match url=".*" />
            <conditions>
                <add input="{HTTPS}" pattern="off" ignoreCase="true" />
            </conditions>
            <action type="Redirect" url="https://{HTTP_HOST}{REQUEST_URI}" redirectType="Permanent" appendQueryString="false" />
        </rule>

        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}" />
        </rule>
        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>
    <security>
       <requestFiltering>
         <hiddenSegments>
           <add segment="node_modules" />
         </hiddenSegments>
          <requestLimits maxAllowedContentLength="52428800" />
       </requestFiltering>
     </security>
     <!-- Make sure error responses are left untouched -->
     <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>